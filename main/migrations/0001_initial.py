# Generated by Django 2.0.7 on 2018-07-24 23:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('albumid', models.IntegerField(primary_key=True, serialize=False)),
                ('albumart', models.CharField(blank=True, max_length=255, null=True)),
                ('albumname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'album',
            },
        ),
        migrations.CreateModel(
            name='Artistuserid',
            fields=[
                ('userid', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('stagename', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'artistuserid',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genrename', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('labelname', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'label',
            },
        ),
        migrations.CreateModel(
            name='Listeneruserid',
            fields=[
                ('userid', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'listeneruserid',
            },
        ),
        migrations.CreateModel(
            name='Createplaylist',
            fields=[
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Listeneruserid')),
                ('playlistname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'createplaylist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artistemail',
            fields=[
                ('email', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Artistuserid')),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'artistemail',
            },
        ),
        migrations.CreateModel(
            name='Artistname',
            fields=[
                ('stagename', models.ForeignKey(db_column='stagename', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Artistuserid')),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'artistname',
            },
        ),
        migrations.CreateModel(
            name='Containsong',
            fields=[
                ('albumid', models.ForeignKey(db_column='albumid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Album')),
                ('songname', models.CharField(max_length=255)),
                ('tracklength', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'containsong',
            },
        ),
        migrations.CreateModel(
            name='Createalbum',
            fields=[
                ('albumid', models.ForeignKey(db_column='albumid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Album')),
                ('creationdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'createalbum',
            },
        ),
        migrations.CreateModel(
            name='Isparentoflabel',
            fields=[
                ('parentlabelname', models.ForeignKey(db_column='parentlabelname', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='parentlabel', serialize=False, to='main.Label')),
                ('sublabelname', models.ForeignKey(db_column='sublabelname', on_delete=django.db.models.deletion.CASCADE, related_name='sublabel', to='main.Label')),
            ],
            options={
                'db_table': 'isparentoflabel',
            },
        ),
        migrations.CreateModel(
            name='Listeneremail',
            fields=[
                ('email', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Listeneruserid')),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'listeneremail',
            },
        ),
        migrations.CreateModel(
            name='Underlabel',
            fields=[
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Artistuserid')),
                ('albumid', models.ForeignKey(db_column='albumid', on_delete=django.db.models.deletion.CASCADE, to='main.Album')),
                ('labelname', models.ForeignKey(db_column='labelname', on_delete=django.db.models.deletion.CASCADE, to='main.Label')),
            ],
            options={
                'db_table': 'underlabel',
            },
        ),
        migrations.CreateModel(
            name='Havesongs',
            fields=[
                ('albumid', models.ForeignKey(db_column='albumid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Containsong')),
                ('songname', models.CharField(max_length=255)),
                ('genrename', models.ForeignKey(db_column='genrename', on_delete=django.db.models.deletion.CASCADE, to='main.Genre')),
            ],
            options={
                'db_table': 'havesongs',
            },
        ),
        migrations.CreateModel(
            name='Playlistincludessongs',
            fields=[
                ('albumid', models.ForeignKey(db_column='albumid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.Containsong')),
                ('songname', models.CharField(max_length=255)),
                ('playlistname', models.CharField(max_length=255)),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='main.Createplaylist')),
            ],
            options={
                'db_table': 'playlistincludessongs',
            },
        ),
        migrations.AddField(
            model_name='createalbum',
            name='userid',
            field=models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='main.Artistuserid'),
        ),
        migrations.AlterUniqueTogether(
            name='containsong',
            unique_together={('albumid', 'songname')},
        ),
        migrations.AlterUniqueTogether(
            name='underlabel',
            unique_together={('userid', 'albumid', 'labelname')},
        ),
        migrations.AlterUniqueTogether(
            name='isparentoflabel',
            unique_together={('parentlabelname', 'sublabelname')},
        ),
        migrations.AlterUniqueTogether(
            name='createalbum',
            unique_together={('albumid', 'userid')},
        ),
        migrations.AlterUniqueTogether(
            name='playlistincludessongs',
            unique_together={('albumid', 'songname', 'userid', 'playlistname')},
        ),
        migrations.AlterUniqueTogether(
            name='havesongs',
            unique_together={('albumid', 'songname', 'genrename')},
        ),
    ]
